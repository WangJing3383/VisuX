============================================================
                   Project Team Contribution Document
============================================================

Project Name:  Visux
Repository URL:  https://github.com/WangJing3383/VisuX.git
Last Updated:  [2025-02-12]
Maintainers:  Jing Wang,

------------------------------------------------------------
1. Team Members & Responsibilities
------------------------------------------------------------

(Although we initially assigned roles, we don't have such a strict division of labour,
and we execute agile development with a strong focus on collaboration.)

- Jing Wang - Frontend Developer with Backend Integration
  Email: wjing8088@gmail.com
  GitHub: WangJing3383
  Responsibilities: Frontend, API Integration

- [Member 2] - Backend Developer
  Email: [email@example.com]
  GitHub: [@GitHubUsername]
  Responsibilities: [Short description of tasks]

- [Member 3] - Backend Developer
  Email: [email@example.com]
  GitHub: [@GitHubUsername]
  Responsibilities: [Short description of tasks]

- [Ezgi Yircali] - Frontend Developer
  Email: eylemish@gmail.com
  GitHub: @slaymyway
  Responsibilities: Frontend (adding functions to the not working components)

- [Member 5] - Frontend Developer
  Email: [email@example.com]
  GitHub: [@GitHubUsername]
  Responsibilities: [Short description of tasks]

------------------------------------------------------------
2. Implemented Features
------------------------------------------------------------

- framework setup - Build react and django, front and back-end separation structure (Implemented by: Jing)
- dataset passing- Implementing method to let frontend get data from backend (Implemented by: Jing)
- connect dim reduction - dim reduction works on frontend and show text result (Implemented by: Jing)
- connect visualization- show plotly visualization of dataset on frontend(Implemented by: Jing)
- visualize() in VisualizationManager - a working function that creates plotly data depending on graph (Implemented by: Ezgi)
- feature selection by user - allowing user to select features when creating a graph (Implemented by: Ezgi)
- Whole GraphSection class - class that displays the graphs and has an option to hide/show graphs (Implemented by: Ezgi)
- fixing Graph Manager functions - rewriting the functions from scratch so that it would create/update graphs(Implemented by: Ezgi)
- feature selection menu - user can change the showed features of a graph by selecting columns (Implemented by: Ezgi)
- data preview chart- show data preview by features(Implemented by: Jing)
- optional graph name - user can give the graph a name or continue usign their id (Implemented by: Ezgi)
- graph from interpolation result - user has an option to see the results as a graph in the graph window (Implemented by: Ezgi)
- graph for manipulated data - after engine operations user can create a graph optionally (Implemented by: Ezgi)
- colour with hex codes - users can change colour with hex codes after creating their graph(Implemented by: Ezgi)
- [Feature 3] - [Short description] (Implemented by: [Member Name])
- methods in Engine - implement methods for curvefitting, interpolate, extrapolateï¼Œdimensional reduction(Implemented by: Shengjie)
- methods in Views - APIs for curvefitting, interplate, extrapolate, dimensional reduction, (Implemented by: Shengjie)
- connect curvefitting - curvefitting works in frontend (Implemented by: Shengjie)
- connect interpolate - interpolate works in frontend and show text result (Implemented by: Shengjie)
- connect extrapolate - extrapolate works in frontend and show text result (Implemented by: Shengjie)
- feature dropdown - users can change the x,y and z axis by clicking on other features in dropdown menu (Implemented by Ezgi)
- type dropdown - users can change type of the graph by clicking on other features in dropdown menu (Implemented by Ezgi)
- graph layers - users can layer their graphs over each other by clicking the button (Implemented by Ezgi)
- better show/hide option - after a user clicks hide button, it will not be shown even if the page is rerendered (Implemented by Ezgi)
- search inside feature menu -user can search features to change inside drop down menu (Implemented by Ezgi)


------------------------------------------------------------
3. Pending Features (To-Do List)
------------------------------------------------------------

- feature selection/edit graph menu -  (Assigned to: Ezgi)
- apply feature changes after Data analysis -  (Assigned to: Shengjie)
- log - (Assigned to: Yufei)
- [Feature 5] - [Short description] (Assigned to: [Member Name])
- [Feature 6] - [Short description] (Assigned to: [Member Name])
